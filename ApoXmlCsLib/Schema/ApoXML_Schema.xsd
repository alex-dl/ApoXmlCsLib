<?xml version="1.0" encoding="UTF-8"?>
<!-- schema for ApoXML
version v1.3.8 2020 08 27
Afterwards a style sheet will convert to JDF intent
open issues: name space ns0? seems to work also with ns1 (maybe should have chosen another) still need special cover part or use Part type?
2018 03 22 v1.3.4 S29 added Description field at job level
2018 05 03 v1.3.4 S30 added Pages/@FileVersion
2018 09 17 v1.3.5 S31 add better example values as annotations; allow Colors in Root node
2018 09 27 v1.3.5 S31.3 PageCount no longer required to allow working with hot tickets, extra attribute to report Apogee Notifications with Event JMF

2018 12 20 v1.3.5 EssFix1 Added GeneralIDs structure, NoImpose attribute and prepare Guest contacts
2019 06 20 v1.3.6 draft AP11.3
				Company no longer mandatory (for guests)
				added Priority, FoldingSchemeSet, AutoFitRule, AutoImposeRule, ImposeWorkStyle, ProductID; added more annotations and example values
				added PaperStock/@MediaUnit
				added AsantiCPM, AsantiWhiteGeneration, AsantiWhiteOrder

2019 07 19 	1.3.6.1 added Pages/@PageIndex for AsantiXML
2019 08 06 	1.3.6.2 fixed Sandwich spelling
2019 10 03 	1.3.6.3 added AsantiImagePreset, removed Choice around Single Part to make work with Excel
2020 03 20  1.3.7 (Apogee 12.0b2) Added Asanti PinAlignments; Added root PublishLevel; Company PrintCenter and Part Impose/Workstyle, add forgotten 11.0 IndependentPageNumbering
2020 08 27  1.3.8 (Apogee 12.0b4) Added AgentNameJDF and AgentNameVersion (forgotten before), assumes at least Apogee 11.3 or Asanti 4.3

todo, values for ImposeWorkStyle, combine with WorkStyle?
todo add legal/letter etc. as page format?
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.agfa.com/apoxml" xmlns:altova="http://www.altova.com/xml-schema-extensions" targetNamespace="http://www.agfa.com/apoxml" elementFormDefault="unqualified">
	<!-- Company element -->
	<xs:complexType name="BaseCompanyType">
		<xs:annotation>
			<xs:documentation>
				Generic Company info (as used for Customer/Approver etc.), not needed for Guest
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Company" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>
					Company Name
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Apogee Company"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Phone" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="+32 3 444 2111"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Street" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Septestraat 27"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ZIP" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="B-2640"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StateProvince" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Antwerp"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="City" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Mortsel"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Country" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Belgium"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JDFProductID" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="APComp_01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PrintCenter" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<xs:documentation>
						12.0 Print Center where the Company resides
					</xs:documentation>
					<altova:exampleValues>
						<altova:example value="FirstPrintCenter"/>
						<altova:example value="SecondPrintCenter"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- Person element -->
	<xs:complexType name="BasePersonType">
		<xs:annotation>
			<xs:documentation>
				Generic Person info (as used for Customer/Approver etc.)
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Prefix" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Mr."/>
						<altova:example value="Mrs."/>
						<altova:example value="Mr."/>
						<altova:example value="Mr."/>
						<altova:example value="Mr."/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Title" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Customer Guru"/>
						<altova:example value="Sender Guru"/>
						<altova:example value="Approver Guru"/>
						<altova:example value="MultiContact Guru"/>
						<altova:example value="Administrator Guru"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FirstName" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Erik"/>
						<altova:example value="Mieke"/>
						<altova:example value="Jan"/>
						<altova:example value="Piet"/>
						<altova:example value="Marcel"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LastName" type="xs:string" use="required">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="theCustomer"/>
						<altova:example value="theSender"/>
						<altova:example value="theApprover"/>
						<altova:example value="theMulticontacter"/>
						<altova:example value="theAdministrator"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixPhone" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="+32 3 444 5555"/>
						<altova:example value="+32 3 444 5551"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MobilePhone" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="+32 3 444 6666"/>
						<altova:example value="+32 3 444 6667"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Email" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Email must be unique between Contacts, and must be a valid address (contain @ and a domain name).
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="thecustomer@printbuyercom"/>
						<altova:example value="thesender@printbuyercom"/>
						<altova:example value="theapprover@printbuyercom"/>
						<altova:example value="themulticontact@printbuyer.com"/>
						<altova:example value="theadministrator@printbuyer.com"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JDFProductID" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="CUST_01"/>
						<altova:example value="SEND_01"/>
						<altova:example value="APPRO_01"/>
						<altova:example value="MULTI_01"/>
						<altova:example value="ADMIN_01"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- CSR -->
	<xs:complexType name="CSRType">
		<xs:annotation>
			<xs:documentation>
				Info on the CSR (optional) (Customer Sales Rep, working in the printing plant).
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="FirstName" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Erik"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LastName" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="theCSR"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Phone" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="+32 3 444 7777"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Email" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="erik.theCSR@printer.com"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JDFProductID" type="xs:string" use="optional">
			<xs:annotation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="ERIKCSR_001"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- Base Contact
other contacts are derived from this -->
	<xs:complexType name="BaseContactType">
		<xs:annotation>
			<xs:documentation>
				Generic Contact (containing Company and Person)
			</xs:documentation>
		</xs:annotation>
		<xs:all minOccurs="0">
			<xs:element name="Company" type="ns0:BaseCompanyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Company is mandatory except for Guest, so no longer mandatory
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="TheCompany"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Person" type="ns0:BasePersonType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Person is optional for CustomerContact but required for all others
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:simpleType name="RolesType">
		<xs:annotation>
			<xs:documentation>
				Only for MultiContact: Optional list of Roles. Only needed when a single Contact has multiple roles.
			</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="Sender Approver"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:list>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Administrator">
						<xs:annotation>
							<xs:documentation>
								Manages the jobs, cannot upload and approve pages unless roles are added.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Approver">
						<xs:annotation>
							<xs:documentation>
								Can approve pages.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Customer">
						<xs:annotation>
							<xs:documentation>
								Main contact and can also upload and approve pages.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Sender">
						<xs:annotation>
							<xs:documentation>
								Can upload pages.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Guest">
						<xs:annotation>
							<xs:documentation>
								For use in one job only and not stored in ProductionCenter Users. Does not need Company or name.
								Need to add the extra roles as Sender or Approver.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="AdminContact">
						<xs:annotation>
							<xs:documentation>
								Same as Customer but does not get Sender and Approval roles by default.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<!-- 20181220 -->
				</xs:restriction>
			</xs:simpleType>
		</xs:list>
	</xs:simpleType>
	<!-- MultiContact Contact
specific contact which also contains Roles -->
	<xs:complexType name="MultiContactType">
		<xs:annotation>
			<xs:documentation>
				MultiContact: Roles specifies the type of contact. Use only when a person has multiple roles
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="Company" type="ns0:BaseCompanyType" minOccurs="0"/>
			<xs:element name="Person" type="ns0:BasePersonType" minOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="Roles" type="ns0:RolesType" use="required"/>
		<!-- 20181220 -->
	</xs:complexType>
	<!-- GeneralIDs
20181220 to specify Custom JDF Variables -->
	<xs:complexType name="GeneralIDsType">
		<xs:annotation>
			<xs:documentation>
				Contains GeneralID elements which map to JDF GeneralID elements and are used for custom JDF Variables
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="GeneralID" type="ns0:GeneralIDType" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						GeneralID is mapped to JDF GeneralID
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeneralIDType">
		<xs:annotation>
			<xs:documentation>
				Contains GeneralID elements which map to JDF GeneralID elements and are used for custom JDF Variables
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Key" type="xs:string" use="required"/>
		<xs:attribute name="Value" type="xs:string" use="required"/>
	</xs:complexType>
	<!-- ***
		List of attributes, grouped by type 
		*** -->
	<!-- A1 and B1 added in stylesheet 1.3.2 -->
	<xs:simpleType name="ISOPageSizeType">
		<xs:annotation>
			<xs:documentation>
				List of ISO Page Sizes
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="A1"/>
			<xs:enumeration value="A2"/>
			<xs:enumeration value="A3"/>
			<xs:enumeration value="A4"/>
			<xs:enumeration value="A5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ISOPaperSizeType">
		<xs:annotation>
			<xs:documentation>
				List of ISO Print Paper Sizes
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="B1"/>
			<xs:enumeration value="B2"/>
			<xs:enumeration value="B3"/>
			<xs:enumeration value="B4"/>
			<xs:enumeration value="B5"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- combination of Page and Paper Size -->
	<xs:simpleType name="ISOPagePaperSizeType">
		<xs:annotation>
			<xs:documentation>
				List of ISO Page and Print Paper Sizes
			</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="ns0:ISOPaperSizeType ns0:ISOPageSizeType"/>
	</xs:simpleType>
	<!-- PAPER INFO -->
	<xs:simpleType name="GradeType">
		<xs:restriction base="xs:integer">
			<xs:enumeration value="1">
				<xs:annotation>
					<xs:documentation>
						Gloss coated wood free
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="2">
				<xs:annotation>
					<xs:documentation>
						Matt coated wood-free
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="3">
				<xs:annotation>
					<xs:documentation>
						Gloss coated web
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="4">
				<xs:annotation>
					<xs:documentation>
						Uncoated white
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="5">
				<xs:annotation>
					<xs:documentation>
						Uncoated yellowish
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ISOPaperSubstrateType">
		<xs:annotation>
			<xs:documentation>
				ISO Paper Substrates (recent)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PS1">
				<xs:annotation>
					<xs:documentation>
						Premium Coated
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS2">
				<xs:annotation>
					<xs:documentation>
						Improved Coated
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS3">
				<xs:annotation>
					<xs:documentation>
						Standard Coated Glossy
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS4">
				<xs:annotation>
					<xs:documentation>
						Standard Coated Matt
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS5">
				<xs:annotation>
					<xs:documentation>
						Wood-free Uncoated
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS6">
				<xs:annotation>
					<xs:documentation>
						Super Calendered
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS7">
				<xs:annotation>
					<xs:documentation>
						Improved Uncoated
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PS8">
				<xs:annotation>
					<xs:documentation>
						Standard uncoated
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- MediaUnit -->
	<xs:simpleType name="MediaUnitType">
		<xs:annotation>
			<xs:documentation>
				MediaUnit (Sheet or Roll). Roll has height = 0 usually.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Roll"/>
			<xs:enumeration value="Sheet"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Pages element -->
	<xs:complexType name="PagesType">
		<xs:annotation>
			<xs:documentation>
				Information on Pages / Content files
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="URL" type="xs:anyURI" use="optional">
			<xs:annotation>
				<xs:documentation>
					URL pointing to the content for this part. If all parts share the same URL (shared runlist) the Cover pages must wrap around the body. URL can be http or an absolute file path like file://myserver/myshare/mybodypdf.pdf, relative paths are not supported.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="file://fileserver/CoverBack.pdf file://fileserver/CoverEnglish.pdf file://fileserver/CoverFrench.pdf"/>
						<altova:example value="file://fileserver/BodyBack.pdf file://fileserver/BodyEnglish.pdf file://fileserver/BodyFrench.pdf"/>
						<altova:example value="http://httpserver/InsertBack.pdf http://httpserver/InsertEnglish.pdf http://httpserver/InsertFrench.pdf"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageCount" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>
					RunList Page Count (required unless hot ticket with empty nr of pages or Asanti): how many pages to upload for this part. Covers: duplex: 4; simplex:2; duplex spread: 2; simplex spread: 1
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1"/>
						<altova:example value="32"/>
						<altova:example value="8"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageIndex" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>
					RunList Index into PDF: 1 grabs first page, 2 second etc.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageWidth" type="xs:decimal" use="optional" default="210">
			<xs:annotation>
				<xs:documentation>
					Final Page Width (mandatory unless PageSize). Units in 'Unit' attribute (pts, inch, mm)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="210"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageHeight" type="xs:decimal" use="optional" default="297">
			<xs:annotation>
				<xs:documentation>
					Final Page Height (mandatory unless PageSize). Units in 'Unit' attribute (pts, inch, mm)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="297"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageSize" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Final Page Width x Height example '210x297' Separators are 'x' or space. Units in 'Unit' attribute (pts, inch, mm)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="210x297"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageSizeName" type="ns0:ISOPageSizeType" use="optional">
			<xs:annotation>
				<xs:documentation>
					Standard ISO Page or Paper Size, currently integrated in PageSize
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="A4"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FileVersion" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					A string that identifies the file version in case of updates. Apogee will update the content file if the FileVersion is different from the previous update. If missing the file is probably not updated.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- Front / Back Color details (normally not used) -->
	<xs:complexType name="ColorDetailsType">
		<xs:annotation>
			<xs:documentation>
				Spot color name list and Nr of Colors when different for Front and Back
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="SpotColors" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="SpotName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Name of the spot color. If Pantone, then preferable like 'PANTONE 300 C'
							</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value=""/>
									<altova:example value=""/>
									<altova:example value="PANTONE 300 C"/>
									<altova:example value="Spot1"/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="NrColors" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Nr of Colors, typically 1 or 4 if not spot colors, add 1 or 2 if extra spot colors.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="4"/>
						<altova:example value="1"/>
						<altova:example value="2"/>
						<altova:example value="5"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- Color element -->
	<xs:complexType name="ColorType">
		<xs:annotation>
			<xs:documentation>
				Color Info
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="SpotColors" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Array of SpotColors if same for Front and Back (recommended). SpotName contains the name. If Pantone, then preferable like 'PANTONE 300 C'
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="SpotName" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>
								Name of the spot color. If Pantone, then preferable like 'PANTONE 300 C'
							</xs:documentation>
							<xs:appinfo>
								<altova:exampleValues>
									<altova:example value="PANTONE 300 C"/>
									<altova:example value=""/>
									<altova:example value=""/>
								</altova:exampleValues>
							</xs:appinfo>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Front" type="ns0:ColorDetailsType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Front colors, use when different spot colors are used for Front and Back
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Back" type="ns0:ColorDetailsType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Back colors, use when different spot colors are used for Front and Back
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="NrColors" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Number of colors. Can be single nr (1 4 5) if front/back are the same, or front/back combined "41" "4+1" "4/1" "4 1"
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="5+0"/>
						<altova:example value="1+1"/>
						<altova:example value="4+4"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- PaperStock -->
	<xs:complexType name="PaperStockType">
		<xs:annotation>
			<xs:documentation>
				Describes the printing paper or media substrate (optional, otherwise taken from Ticket or Product)
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Grade" type="ns0:GradeType" use="optional">
			<xs:annotation>
				<xs:documentation>
					ISO Paper Grade (1..5) (optional). Used for calibration and press setup (only for ConventionalPrinting). Mandatory if the Paper Stock did not exist yet in Apogee. Exclusive with @ISOPaperSubstrate.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="2"/>
						<altova:example value="1"/>
						<altova:example value="2"/>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ISOPaperSubstrate" type="ns0:ISOPaperSubstrateType" use="optional">
			<xs:annotation>
				<xs:documentation>
					ISO PaperSubstrate (PS1..PS8) (optional). Used for calibration and press setup (only for ConventionalPrinting), exclusive with Grade..
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="PS4"/>
						<altova:example value="PS3"/>
						<altova:example value="PS4"/>
						<altova:example value="PS3"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaType" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Type of Media. ConventionalPrinting=Paper; DigitalPrinting=Paper or Transparency; WideFormat=anything (like Vinyl) but best match category in Asanti Media hub.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Paper"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ProductID" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					MIS stock identifier to help selecting the media. Not really used.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<!-- Coating (DigitalPrinting) -->
		<xs:attribute name="Coating" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Coating, used for DigitalPrinting, use one of the standard JDF values (None, Coated, Glossy, Matte, Satin, Semigloss). Not really used.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="None"/>
						<altova:example value="Coated"/>
						<altova:example value="Glossy"/>
						<altova:example value="Matte"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StockName" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Conventional: Name of the paper stock (Brand). Should not include weight but can include coating/grade.
					Wide Format:  Asanti Media hub Media Name
					Digital:      Engine paper name, manually create also paper stock with same name
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Agfa Matt coated wood free"/>
						<altova:example value="Agfa Gloss coated wood free"/>
						<altova:example value="Agfa Matt coated wood free"/>
						<altova:example value="Forex 3mm"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Weight" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>
					Conventional or Digital: Paper Weight in gm/m2 (recommended unless wide format)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="100"/>
						<altova:example value="150"/>
						<altova:example value="100"/>
						<altova:example value="100"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Thickness" type="xs:decimal" use="optional">
			<xs:annotation>
				<xs:documentation>
					Conventional or Digital: Paper Thickness. Units in 'Unit' attribute (pts, inch, mm) (optional, if not specified the prepress operator needs to specify it once). Only needed for shingling.
					Wide Format: Media Thickness. Important since used for the head (not used yet?).
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="0.092"/>
						<altova:example value="0.120"/>
						<altova:example value="0.092"/>
						<altova:example value="5.0"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaUnit" type="ns0:MediaUnitType" use="optional">
			<xs:annotation>
				<xs:documentation>
					Media Unit to switch between Sheet and Roll. Roll usually has height=0.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Sheet"/>
						<altova:example value="Roll"/>
						<altova:example value="Sheet"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SheetWidth" type="xs:decimal" use="optional">
			<xs:annotation>
				<xs:documentation>
					Conventional or Digital: Width of the press sheet (optional, production). Units in 'Unit' attribute (pts, inch, mm)
					Wide Format: Sheet or Roll width
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1000"/>
						<altova:example value="707"/>
						<altova:example value="1000"/>
						<altova:example value="707"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SheetHeight" type="xs:decimal" use="optional">
			<xs:annotation>
				<xs:documentation>
					Conventional or Digital: Height of the press sheet (optional, production). Units in 'Unit' attribute (pts, inch, mm)
					Wide Format: Sheet Height (set to 0 for roll)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="707"/>
						<altova:example value="500"/>
						<altova:example value="707"/>
						<altova:example value="500"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SheetSize" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Width x Height of the press sheet or the ISO Paper Size (see SheetSizeName) (optional, production). e.g. '1000x700' Separators are 'x' or space. Units in 'Unit' attribute (pts, inch, mm)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="1000x707"/>
						<altova:example value="707x500"/>
						<altova:example value="1000x707"/>
						<altova:example value="707x500"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SheetSizeName" type="ns0:ISOPagePaperSizeType" use="optional">
			<xs:annotation>
				<xs:documentation>
					Fixed ISO Page or Paper Size names (Ax, Bx)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="B1"/>
						<altova:example value="B2"/>
						<altova:example value="B1"/>
						<altova:example value="B2"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- PartType type -->
	<xs:simpleType name="PartTypeType">
		<xs:annotation>
			<xs:documentation>
				Product Part Type (mandatory if multipart), choose from Cover, Body, Insert, Flatwork, Folded, Plain. Plain is the default. Not really used yet
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<!-- Bound -->
			<xs:enumeration value="Cover"/>
			<xs:enumeration value="Body">
				<xs:annotation>
					<xs:documentation>
						The Body Part is the main content/text part. If there is a Cover Part, it wraps around the Body Part.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Insert">
				<xs:annotation>
					<xs:documentation>
						An Insert Part has its own page numbering (starting at 1) and is independent of the Body Part.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Unbound -->
			<xs:enumeration value="Flatwork">
				<xs:annotation>
					<xs:documentation>
						Unbound Unfolded
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Folded">
				<xs:annotation>
					<xs:documentation>
						Unbound Folded
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- unknown -->
			<xs:enumeration value="Plain"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- CoverType type -->
	<xs:simpleType name="CoverTypeType">
		<xs:annotation>
			<xs:documentation>
				Agfa Cover Type. Only needed for special covers (Spine/Flaps). Choose from provided enumeration values.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Spread">
				<xs:annotation>
					<xs:documentation>
						Wide double width Cover spread, 2 pages in total
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Standard">
				<xs:annotation>
					<xs:documentation>
						Standard Cover, default. 4 pages in total
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Spine"/>
			<xs:enumeration value="FrontFlap"/>
			<xs:enumeration value="BackFlap"/>
			<xs:enumeration value="FrontAndBackFlap"/>
			<xs:enumeration value="SpineAndFrontFlap"/>
			<xs:enumeration value="SpineAndBackFlap"/>
			<xs:enumeration value="SpineAndFrontFlap"/>
			<xs:enumeration value="SpineAndFrontAndBackFlap"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- ProductionCenter Publish Level -->
	<xs:simpleType name="PublishLevelType">
		<xs:annotation>
			<xs:documentation>
				12.0 ProductionCenter Publish Level
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DontPublish">
				<xs:annotation>
					<xs:documentation>
						Do not show in ProductionCenter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Publish">
				<xs:annotation>
					<xs:documentation>
						Show in Production Center
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PublishForApproval">
				<xs:annotation>
					<xs:documentation>
						Only visible for Approval
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PublishForUpload">
				<xs:annotation>
					<xs:documentation>
						Only visible for Upload
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PublishInternally">
				<xs:annotation>
					<xs:documentation>
						Only for CSR
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<!-- WorkStyle (11.0) -->
	<xs:simpleType name="WorkStyleType">
		<xs:annotation>
			<xs:documentation>
				11.0 WorkStyle, becomes ImposeWorkStyle in 12.0
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Simplex">
				<xs:annotation>
					<xs:documentation>
						Single sided, both old and new, Apogee: SingleSided
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Duplex">
				<xs:annotation>
					<xs:documentation>
						From 11.0 WorkStyle, generic, Auto Impose will use its default, not for ImposeWorkStyle
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<!-- Auto Impose WorkStyle (12.0 merged) with WorkStyle -->
	<xs:simpleType name="ImposeWorkStyleType">
		<xs:annotation>
			<xs:documentation>
				12.0 Auto Impose WorkStyle, merging with previous WorkStyle
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Simplex">
				<xs:annotation>
					<xs:documentation>
						Single sided, both old and new, Apogee: SingleSided
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SingleSided">
				<xs:annotation>
					<xs:documentation>
						Apogee compatibility value, use Simplex instead
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Duplex">
				<xs:annotation>
					<xs:documentation>
						From 11.0 WorkStyle, generic, Auto Impose will use its default, not for ImposeWorkStyle
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WorkAndBack">
				<xs:annotation>
					<xs:documentation>
						Apogee SheetWise
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SheetWise">
				<xs:annotation>
					<xs:documentation>
						Apogee compatibility, use JDF WorkAndBack
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WorkAndTumble">
				<xs:annotation>
					<xs:documentation>
						Work And Tumble
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WorkAndTurn">
				<xs:annotation>
					<xs:documentation>
						Work And Turn
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Perfecting">
				<xs:annotation>
					<xs:documentation>
						Perfecting, Apogee Perfector
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Perfector">
				<xs:annotation>
					<xs:documentation>
						Apogee Compatiblity, JDF: Perfecting
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- for JMF -->
	<xs:simpleType name="ResourceClasses2SignalType">
		<xs:annotation>
			<xs:documentation>
				List of resources that can be signaled (JMF)
			</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="Handling Parameter"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:list>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Consumable">
						<xs:annotation>
							<xs:documentation>
								e.g. Media.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Handling">
						<xs:annotation>
							<xs:documentation>
								e.g. Plate.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Parameter">
						<xs:annotation>
							<xs:documentation>
								e.g RunList.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:list>
	</xs:simpleType>
	<xs:simpleType name="Notifications2SignalType">
		<xs:annotation>
			<xs:documentation>
				List of Apogee Notifications that can be signaled (JMF)
			</xs:documentation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="Information Warning Error"/>
				</altova:exampleValues>
			</xs:appinfo>
		</xs:annotation>
		<xs:list>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Information">
						<xs:annotation>
							<xs:documentation>
								Apogee Informational Notifications.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								Apogee Warning Notifications.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Error">
						<xs:annotation>
							<xs:documentation>
								Apogee Error Notifications.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:list>
	</xs:simpleType>
	<!-- JMF -->
	<xs:complexType name="JMFType">
		<xs:annotation>
			<xs:documentation>
				Basic JMF feedback control
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="EventURL" type="xs:anyURI" use="optional">
			<xs:annotation>
				<xs:documentation>
					URL of an HTTP (JMF) Receiver to receive an Event JMF when job is started, all content had arrived (not approved yet) and when all plates were made.
					Optionally also the Apogee Notifications.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="http//127.0.0.0/DumpSignals/?filenameTemplate=MyMIS"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ResourceURL" type="xs:anyURI" use="optional">
			<xs:annotation>
				<xs:documentation>
					URL of an HTTP (JMF) Receiver to receive an Resource Signal JMF, e.g. when pages change state or plates are created.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="http//127.0.0.0/DumpSignals/?filenameTemplate=MyMIS"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ResourceClasses2Signal" type="ns0:ResourceClasses2SignalType" use="optional" default="Consumable Handling Parameter">
			<xs:annotation>
				<xs:documentation>
					Resource Classes to signal when using ResourceURL, take values from List. Use less to reduce traffic.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Notifications2Signal" type="ns0:Notifications2SignalType" use="optional" default="">
			<xs:annotation>
				<xs:documentation>
					Notifications to signal when using EventURL, take values from List. Disabled by default.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- Base Part -->
	<xs:complexType name="BaseBasePartType">
		<xs:annotation>
			<xs:documentation>
				Product Part Level Specific information (not job level)
			</xs:documentation>
		</xs:annotation>
		<xs:all minOccurs="1">
			<xs:element name="Color" type="ns0:ColorType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Pages" type="ns0:PagesType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="PaperStock" type="ns0:PaperStockType" minOccurs="0" maxOccurs="1"/>
		</xs:all>
		<xs:attribute name="PartName" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>
					Product Part Name. Mandatory for multi-part. Becomes the Apogee Product Part Name
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Cover"/>
						<altova:example value="Text section"/>
						<altova:example value="Images section"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Press" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					DeviceID of the Conventional, Digital Press or Wide Format device (optional, production)
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="SM74"/>
						<altova:example value="R700"/>
						<altova:example value="R700"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<!-- bit strange since both old and new, Duplex means that Auto Impose will use default -->
		<xs:attribute name="WorkStyle" type="ns0:ImposeWorkStyleType" use="optional" default="Duplex">
			<xs:annotation>
				<xs:documentation>
					Simplex/Duplex selection (Mandatory)
					12.0: also JDF Values to preset Auto Impose
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Simplex"/>
						<altova:example value="Duplex"/>
						<altova:example value="Perfecting"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FoldCatalog" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					FoldCatalog to use for Unbound products (Optional). Use standard CIP4 values (like F2-1, F4-2, ...).
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="F2-1"/>
						<altova:example value="F16-7"/>
						<altova:example value="F8-7"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OpenWidth" type="xs:decimal" use="optional">
			<xs:annotation>
				<xs:documentation>
					Open (unfolded) Width (optional unless Spread). Only needed for spread covers and unbound folded work.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="420"/>
						<altova:example value="0"/>
						<altova:example value="0"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Comments" type="xs:string" use="optional" default="">
			<xs:annotation>
				<xs:documentation>
					Comments specific for this part.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Cover comment"/>
						<altova:example value="Text  Body comment"/>
						<altova:example value="Image Insert comment"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Amount" type="xs:integer" use="optional">
			<xs:annotation>
				<xs:documentation>
					Number of copies to print for this (unbound) Part. Currently only read for unbound products. Amount at root level is not used.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="10"/>
						<altova:example value="5"/>
						<altova:example value="100"/>
						<altova:example value="1"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IndependentPageNumbering" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>
					Set to True to start the page numbering of this part always at 1 
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="true"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>

		<!-- Auto Impose -->
		<xs:attribute name="BindingOptions" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					BindingOption for Auto Impose. Not implemented yet.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Nested, Overf 3, Spine 0, Face_Head_Foot 8"/>
						<altova:example value="Web Nested, Overf 3, Spine 0, Face_Head_Foot 8-25"/>
						<altova:example value="Web Stacked, Spine 3, Face_Head_Foot 8-25"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PressSheetLayout" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Press Sheet Layout rule for Auto Impose. Requires Prepress 11.0.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Center Center"/>
						<altova:example value="Center Bottom"/>
						<altova:example value="Fit to sheet edges"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FoldingSchemeSet" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Folding Scheme Set for Auto Impose. Not implemented yet.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="F4-2"/>
						<altova:example value="Small Set"/>
						<altova:example value="Large Set"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>

		<xs:attribute name="AutoFitRule" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Auto Fit rule for Auto Impose (unbound). Not implemented yet.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Fewer sheets, Pack in blocks"/>
						<altova:example value="Less waste, Pack in blocks"/>
						<altova:example value="Fewer sheets, Stack in separate columns"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutoImposeRule" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
					Auto Impose rule for Auto Impose (bound). Not implemented yet.
				</xs:documentation>
				<xs:appinfo>
					<altova:exampleValues>
						<altova:example value="Auto Digital"/>
						<altova:example value="Largest First"/>
						<altova:example value="Smallest First"/>
					</altova:exampleValues>
				</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
		<!-- ??The attributes below are defined per part, but Apogee JDF only supports at job level -->
	</xs:complexType>
	<!-- Cover Part
only difference with BasePart is CoverType added	-->
	<xs:complexType name="PartCoverType">
		<xs:annotation>
			<xs:documentation>
				Cover Part (CoverType attribute added)
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns0:BaseBasePartType">
				<xs:attribute name="CoverType" type="ns0:CoverTypeType"/>
				<xs:attribute name="PartType" type="ns0:PartTypeType" fixed="Cover"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BasePartType">
		<xs:annotation>
			<xs:documentation>
				BasePart (not cover)
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns0:BaseBasePartType">
				<xs:attribute name="PartType" type="ns0:PartTypeType" use="optional" default="Plain">
					<xs:annotation>
						<xs:appinfo>
							<altova:exampleValues>
								<altova:example value="Body"/>
								<altova:example value="Insert"/>
							</altova:exampleValues>
						</xs:appinfo>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Binding Method -->
	<xs:simpleType name="MethodType">
		<xs:annotation>
			<xs:documentation>
				Binding Type/Method/Style (mandatory). Choose from 'Nested' (e.g. SaddleStitched), Stacked (e.g. PerfectBound) and Unbound (Flatwork, e.g. business cards, flyer's, posters)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Nested">
				<xs:annotation>
					<xs:documentation>
						sheets inserted into each other like for saddle stitched (collecting)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Stacked">
				<xs:annotation>
					<xs:documentation>
						sheets stacked on top of each other like for perfect bound (gathering)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unbound">
				<xs:annotation>
					<xs:documentation>
						unbound work like posters, flyer's, business card
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- JDFBindingType type
not really useful	
	<xs:simpleType name="JDFBindingTypeType">
		<xs:annotation>
			<xs:documentation>Binding Type/Method/Style (optional). More details on the binding. Not read yet by Prepress.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="SaddleStitch">
				<xs:annotation>
					<xs:documentation>saddle stitched (nested, collecting)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HardCover">
				<xs:annotation>
					<xs:documentation>books (stacked, gathering)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SoftCover">
				<xs:annotation>
					<xs:documentation>magazines, brochures (stacked, gathering)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LooseBinding">
				<xs:annotation>
					<xs:documentation>unbound work</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>-->
	<!-- Binding -->
	<xs:complexType name="BindingType">
		<xs:annotation>
			<xs:documentation>
				How the product is bound (or not)
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Method" type="ns0:MethodType" use="optional"/>
		<!-- JDFBindingType is not really used yet -->
		<!--xs:attribute name="JDFBindingType" type="ns0:JDFBindingTypeType" use="optional"/ -->
	</xs:complexType>
	<!-- Production Intent -->
	<xs:simpleType name="PrintProcessType">
		<xs:annotation>
			<xs:documentation>
				Specifies the preferred production method: conventional printing, commercial digital printing or wide format inkjet
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ConventionalPrinting">
				<xs:annotation>
					<xs:documentation>
						Conventional printing requiring plates
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DigitalPrinting">
				<xs:annotation>
					<xs:documentation>
						Commercial Digital presses
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WideFormatPrinting">
				<xs:annotation>
					<xs:documentation>
						Wide format inkjet presses
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Asanti specific -->
	<xs:simpleType name="PrintQualityType">
		<xs:annotation>
			<xs:documentation>
				Specifies the Print Quality for Asanti Sign and Display jobs
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Balanced">
				<xs:annotation>
					<xs:documentation>
						Asanti "Production" quality
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CostEffective">
				<xs:annotation>
					<xs:documentation>
						Asanti "Standard" quality (always available)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Fastest">
				<xs:annotation>
					<xs:documentation>
						Asanti "Express" quality
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HighestQuality">
				<xs:annotation>
					<xs:documentation>
						Asanti "High Quality" quality
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AsantiWhiteGenerationType">
		<xs:annotation>
			<xs:documentation>
				Specifies the source of white for Asanti Sign and Display jobs
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="FillEntireImagePrinter"/>
			<xs:enumeration value="FillEntireImageRender"/>
			<xs:enumeration value="FromImage"/>
			<xs:enumeration value="InverseSolidImageMaskRender"/>
			<xs:enumeration value="InverseVariableImageMaskRender"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="PixelMaskPrinter"/>
			<xs:enumeration value="SolidImageMaskPixelBasedRender"/>
			<xs:enumeration value="SolidImageMaskRender"/>
			<xs:enumeration value="VariableImageMaskRender"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AsantiWhiteOrderType">
		<xs:annotation>
			<xs:documentation>
				Specifies the order of white for Asanti Sign and Display jobs
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PostWhite"/>
			<xs:enumeration value="PreWhite"/>
			<xs:enumeration value="PreWhite_OnMedia"/>
			<xs:enumeration value="SandwichWhite"/>
			<xs:enumeration value="SandwichWhite_OnWhite"/>
			<xs:enumeration value="SpotWhite"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- *** root node *** -->
	<xs:element name="ApoXML">
		<xs:annotation>
			<xs:documentation>
				Root element. Contains info that is shared over parts and also the Product Part elements. Usually with ns0 prefix
			</xs:documentation>
		</xs:annotation>
		<!-- List of elements -->
		<xs:complexType>
			<xs:sequence minOccurs="1">
				<!-- add the elements in the specified order ! -->
				<!-- optional GeneralID 20181220 -->
				<xs:element name="GeneralIDs" type="ns0:GeneralIDsType" minOccurs="0" maxOccurs="1"/>
				<!-- all Contacts -->
				<xs:element name="CustomerContact" type="ns0:BaseContactType" minOccurs="0" maxOccurs="1"/>
				<!-- optional webapproval Sender (max 1 for now) -->
				<xs:element name="SenderContact" type="ns0:BaseContactType" minOccurs="0" maxOccurs="unbounded"/>
				<!-- optional approver contact -->
				<xs:element name="ApproverContact" type="ns0:BaseContactType" minOccurs="0" maxOccurs="unbounded"/>
				<!-- optional contact with multiple roles. need to use @Roles then  -->
				<xs:element name="MultiContact" type="ns0:MultiContactType" minOccurs="0" maxOccurs="unbounded"/>
				<!-- optional Administrator contact -->
				<xs:element name="AdministratorContact" type="ns0:BaseContactType" minOccurs="0" maxOccurs="1"/>
				<!-- Printer CSR, assume 1 is enough -->
				<xs:element name="CSR" type="ns0:CSRType" minOccurs="0" maxOccurs="1"/>
				<!-- Binding -->
				<xs:element name="Binding" type="ns0:BindingType" minOccurs="0" maxOccurs="1"/>
				<!-- Shared Color new 20180917 -->
				<xs:element name="Color" type="ns0:ColorType" minOccurs="0" maxOccurs="1"/>
				<!-- Shared PaperStock Media -->
				<xs:element name="PaperStock" type="ns0:PaperStockType" minOccurs="0" maxOccurs="1"/>
				<!-- JMF messaging -->
				<xs:element name="JMF" type="ns0:JMFType" minOccurs="0" maxOccurs="1"/>
				<!-- Parts -->
				<xs:element name="PartCover" type="ns0:PartCoverType" minOccurs="0" maxOccurs="1"/>
				<!-- specific for Excel schema, use for simple jobs (one part, or cover + body) -->
				<!-- 20191003 removed xs:choice since not supported by Excel, now both parts appear -->
				<xs:element name="PartSingle" type="ns0:BasePartType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Part" type="ns0:BasePartType" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="Amount" type="xs:integer" use="optional">
				<xs:annotation>
					<xs:documentation>
						Number of copies to print for the whole product. Currently only read for unbound products (but should then be at part level?).
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="CustomerOrderID" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Print Buyer job reference in his database. (less used)
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="PrintProcess" type="ns0:PrintProcessType" use="optional" default="ConventionalPrinting">
				<xs:annotation>
					<xs:documentation>
						Printing process to use (conventional, digital, wide format)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="ConventionalPrinting"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="ProductType" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						'Flatwork', 'Folded', 'Brochure' 'Book' or 'Other; 'Flatwork' is for Unbound; 'Folded' is a folded unbound leaflet, 'Brochure' is for a Brochure. Apogee currently does not parse this for the final product.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Brochure"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="PublishLevel" type="ns0:PublishLevelType" use="optional">
				<xs:annotation>
					<xs:documentation>
						Publish Level for ProductionCenter: hide or show it. Requires AP12.0.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Publish"/>
							<altova:example value="DontPublish"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="URL" type="xs:anyURI" use="optional">
				<xs:annotation>
					<xs:documentation>
						URL pointing to the content for the job (shared). Use if one PDF is delivered for the whole job. https: is NOT supported.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="file://fileserver/SharedBack.pdf file://fileserver/SharedEnglish.pdf file://fileserver/SharedFrench.pdf"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Comments" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Comments specific for this part.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Sample job with spread 5 color cover, black and white 32p text section and 8p CMYK image section"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="CommentURL" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						URL that points to a job bag. http or file protocol.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="http://www.jobbags.com/Job23456.html"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Description" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						A short string that is shown in the Apogee Job Description field
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="New Mercedes car brochure for the FEBIAC exhibition"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="EndDate" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Due date (Apogee Finished date) format yyyy-mm-dd or yyyy/mm/dd
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="2017-10-12"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="JobName" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						JDF DescriptiveName. Apogee JobName. A readable (short) name of the job. OrderNumber is copied if missing.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Car Brochure Nov 2019"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Operator" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Apogee Operator that needs to handle the job. May need to enable Preferences flag in Apogee client to allow Operator override.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Apogee operator"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<!-- 
			*** Production ***
			-->
			<xs:attribute name="OrderNumber" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						JDF Job ID (mandatory). Apogee OrderNumber. Identification of the job. Usually a short, incrementing number.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="23456"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Priority" type="xs:integer" use="optional">
				<xs:annotation>
					<xs:documentation>
						Job Priority (100 = High, 50=Normal, 0=Low)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="100"/>
							<altova:example value="50"/>
							<altova:example value="0"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<!-- Asanti specific -->
			<xs:attribute name="AsantiQuality" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti Quality selector using Asanti values, part of CPM.(condition: Wide Format)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Express"/>
							<altova:example value="Standard"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<!-- 20191003 5.0 -->
			<xs:attribute name="AsantiImagePreset" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti 5.0 Image Preset selector.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Grommets 5mm"/>
							<altova:example value="Trim 3mm"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AsantiPinSet" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti 5.0 Alignment Pin Set, GeneralID[agfaAlignPinSet].
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Front Pins"/>
							<altova:example value="Back Pins"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AsantiPinConfig" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti 5.0 Alignment Pin Configuration, GeneralID[agfaAlignPinConfig].
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Pin Config1"/>
							<altova:example value="Pin Config2"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<!-- end 5.0 -->
			<xs:attribute name="AsantiCPM" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti CPM selector, must match exactly.(condition: Wide Format)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="HighQ - 4P DS Bi 720x720 - 6C"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AsantiWhiteGeneration" type="ns0:AsantiWhiteGenerationType" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti WhiteGeneration selector, must match exactly.(condition: Wide Format)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="FromImage"/>
							<altova:example value="None"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AsantiWhiteOrder" type="ns0:AsantiWhiteOrderType" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti WhiteOrder selector, must match exactly.(condition: Wide Format)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="PostWhite"/>
							<altova:example value="PreWhite"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Product" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Apogee Start Product. Values not specified in ApoXML are taken from the default JDF Apogee Product or the Product in the Ticket Template.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="PerfectBound_Brochure"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="PrintQuality" type="ns0:PrintQualityType" use="optional">
				<xs:annotation>
					<xs:documentation>
						Asanti Quality selector but using JDF values, part of CPM.(condition: Wide Format)
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="CostEffective"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="NamedFeatures" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						JDF NamedFeatures (optional, production) parameter set names) to use at job level. Has list of pairs of (OperationName ParametersetName). If parameter set name contains a space, escape with :20.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="render newCMS image 2400dpi"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="NoImpose" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>
						Only needed (with value true) if a ticket is used and it does NOT contain Imposition TP. 
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="true"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="TicketTemplate" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						Apogee HotTicket or JobTicket Template to be used to create the plan/flows for this job. Plan from dropper hot ticket is used if not provided.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Spread_Brochure"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Versions" type="xs:string" use="optional" default="">
				<xs:annotation>
					<xs:documentation>
						List of Versions (condition: versioning). Space separated list so Version must not contain spaces. Versions apply to all parts and only to the Black separation.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="English French"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="VersionLayers" type="xs:string" use="optional" default="">
				<xs:annotation>
					<xs:documentation>
						Name of the two Version Layers (condition: versioning with layers). First is Background, second is layer with differences (language, region). Space separated list so name must not contain spaces.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="Common Language"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<!-- *** 
			One time setup 
			-->
			<xs:attribute name="AgentName" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						The name of the program that creates the ApoXML. Used for debugging. Is NOT copied to the created Intent JDF.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="ApoXML Sample Generator"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AgentNameJDF" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						The name of the program that creates the ApoXML as used in the created Intent JDF. Used for logging and diagnostic purposes.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="ApoXML Sample Generator"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AgentVersion" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						The version of the program that creates the ApoXML. Used for debugging. Is NOT copied to the created Intent JDF.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="1.0"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="AgentVersionJDF" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>
						The version of the program that creates the ApoXML as used in the created Intent JDF. Used for logging and diagnostic purposes.
					</xs:documentation>
					<xs:appinfo>
						<altova:exampleValues>
							<altova:example value="1.0"/>
						</altova:exampleValues>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="DecimalSeparator" use="required">
				<xs:annotation>
					<xs:documentation>
						Decimal Separator. Choose from ',' or '.' Default ',' Note that schema validation will complain when ',' is used.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value=","/>
						<xs:enumeration value="."/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ThousandSeparator" use="optional" default=".">
				<xs:annotation>
					<xs:documentation>
						Thousand Separator. Choose from ',' '.' or ' Default '.'
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="."/>
						<xs:enumeration value=","/>
						<xs:enumeration value="&quot;"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Unit" use="required">
				<xs:annotation>
					<xs:documentation>
						Unit for Page / Sheet Width / Height / Size, Paper Thickness. Choose from mm, inch, pts. Default mm.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="mm"/>
						<xs:enumeration value="inch"/>
						<xs:enumeration value="pts"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
